/*
RESPONSIVE BREAKPOINTS
*/
$breakpoints: (
  'mobile': (
    max-width: 576px,
  ),
  'tablet': (
    min-width: 578px,
  ),
  'desktop': (
    min-width: 768px,
  ),
  'lg-desktop': (
    min-width: 1024px,
  ),
) !default;

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  } @else {
    @warn "Breakpoint mixin supports: mobile, tablet, desktop";
  }
}

/*
RESPONSIVE PADDING
*/

// NOTE: for responsive container padding all sides
@mixin padding-responsive($mobile: 1rem, $tablet: 1.25rem, $desktop: 1.5rem, $lg-desktop: 1.5rem) {
  padding: $mobile;
  @include respond-to(tablet) {
    padding: $tablet;
  }
  @include respond-to(desktop) {
    padding: $desktop;
  }
}

// TODO: create Left/Right only padding option
@mixin padding-x($mobile: 1rem, $tablet: 1.25rem, $desktop: 1.5rem, $lg-desktop: 1.5rem) {
  padding: 0 $mobile;
  @include respond-to(tablet) {
    padding: 0 $tablet;
  }
  @include respond-to(desktop) {
    padding: 0 $desktop;
  }
}

// TODO: create Bottom/Top only padding option
@mixin padding-y($mobile: 1rem, $tablet: 1.25rem, $desktop: 1.5rem, $lg-desktop: 1.5rem) {
  padding: $mobile 0;
  @include respond-to(tablet) {
    padding: $tablet 0;
  }
  @include respond-to(desktop) {
    padding: $desktop 0;
  }
}

@mixin margin-bottom($mobile: 1rem, $tablet: 1.25rem, $desktop: 1.5rem, $lg-desktop: 1.5rem) {
  margin-bottom: $mobile;
  @include respond-to(tablet) {
    margin-bottom: $tablet;
  }
  @include respond-to(desktop) {
    margin-bottom: $desktop;
  }
}

a,
button,
.cursor {
  cursor: pointer;
  user-select: none;
}
button {
  border: none;
}
.center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.flex {
  display: flex;
}
.flex-all {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.flex-wrap {
  display: flex;
  flex-wrap: wrap;
}
.flex-center {
  display: flex;
  align-items: center;
}
.flex-column {
  display: flex;
  flex-direction: column;
}
.flex-start {
  display: flex;
  align-items: flex-start;
}
.flex-end {
  display: flex;
  align-items: flex-end;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-around {
  justify-content: space-around;
}
.justify-end {
  justify-content: flex-end;
}
.relative {
  position: relative;
}
.fill {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}
.loading-wrapper {
  display: flex;
  justify-content: center;
}